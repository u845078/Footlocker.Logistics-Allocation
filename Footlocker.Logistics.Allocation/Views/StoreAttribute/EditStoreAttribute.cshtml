@model Footlocker.Logistics.Allocation.Models.CreateStoreAttributeModel

@{
    ViewBag.Title = "Edit";
}
<script type="text/javascript">
    function setValueLabelToLevelSelection() {
        // Change the 'Value' label's label text to match the Level selection, per users...
        var levelOptions = $("#StoreAttribute_Level")[0].childNodes;
        $(levelOptions).each(function (idx, lvl) {
            if (lvl.selected) {
                $('label[for="StoreAttribute_Value"]').text(lvl.text);
                if (lvl.text == 'All') {
                    $("#fob_dropdown").hide();
                    $("#StoreAttribute_Value").hide();
                    $('label[for="StoreAttribute_Value"]').hide();
                }
                else if (lvl.text == 'FOB') {
                    $("#StoreAttribute_Value").hide();
                    $("#fob_dropdown").show();
                    $('label[for="StoreAttribute_Value"]').show();
                    setValueToFOBSelection();
                }
                else {
                    $("#fob_dropdown").hide();
                    $("#StoreAttribute_Value").show();
                    $('label[for="StoreAttribute_Value"]').show();
                }
            }
        });
    }

    function setValueToFOBSelection() {
        // Change the 'Value' label's label text to match the Level selection, per users...
        var levelOptions = $("#fob_dropdown")[0].childNodes;
        $(levelOptions).each(function (idx, lvl) {
            if (lvl.selected) {
                $("#StoreAttribute_Value").val(lvl.value);
            }
        });
    }


    $(function () {
        $("#fob_dropdown").hide();
        // Sync the value label text to the default level selection
        setValueLabelToLevelSelection();

        // Wire up a change handler for the Level Selection (to change Value label text)
        $("#StoreAttribute_Level").change(setValueLabelToLevelSelection);
        $("#fob_dropdown").change(setValueToFOBSelection);

    });

</script>

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>StoreAttribute</legend>
<table>
<tr>
    <td>
        @Html.HiddenFor(model => model.StoreAttribute.ID)
        @Html.LabelFor(model => model.StoreAttribute.Division)
    </td>
    <td>
        @Html.DropDownListFor(model => model.StoreAttribute.Division, new SelectList(Model.Divisions, "DivCode", "DivisionName"), new { disabled = "disabled" })
        @Html.HiddenFor(model => model.StoreAttribute.Division)
    </td>
    <td>
        @Html.LabelFor(model => model.StoreAttribute.Store)
    </td>
    <td>
        @Html.DisplayFor(model => model.StoreAttribute.Store)
        @Html.HiddenFor(model => model.StoreAttribute.Store)
        @Html.ValidationMessageFor(model => model.StoreAttribute.Store)
    </td>
</tr>
<tr>
    <td>
        @Html.LabelFor(model => model.StoreAttribute.LikeDivision)
    </td>
    <td>
        @Html.DropDownListFor(model => model.StoreAttribute.LikeDivision, new SelectList(Model.Divisions, "DivCode", "DivisionName"), new { disabled = "disabled" })
        @Html.HiddenFor(model => model.StoreAttribute.LikeDivision)
    </td>
    <td>
        @Html.LabelFor(model => model.StoreAttribute.LikeStore)
    </td>
    <td>
        @Html.EditorFor(model => model.StoreAttribute.LikeStore)
        @Html.ValidationMessageFor(model => model.StoreAttribute.LikeStore)
    </td>
</tr>
<tr>
<td>
            @Html.LabelFor(model => model.StoreAttribute.Level)
</td><td>            
    @Html.DropDownListFor(model => model.StoreAttribute.Level, new List<SelectListItem> { new SelectListItem { Text = "All", Value = "All" }, new SelectListItem { Text = "FOB", Value = "FOB" }, new SelectListItem { Text = "Department", Value = "Dept" } })
</td>
<td>
    @Html.LabelFor(model => model.StoreAttribute.Value)
</td><td>
    @Html.EditorFor(model => model.StoreAttribute.Value)
    @Html.DropDownListFor(model => model.StoreAttribute.Value, new SelectList(Model.FOBs, "Code", "Description"), new { id = "fob_dropdown" })
    @Html.ValidationMessageFor(model => model.StoreAttribute.Value)
</td>
</tr>
<tr>
<td>

            @Html.LabelFor(model => model.StoreAttribute.Weight)
</td><td>            @Html.EditorFor(model => model.StoreAttribute.Weight)
            @Html.ValidationMessageFor(model => model.StoreAttribute.Weight)
</td>
<td></td>
</tr>
<tr>
<td>
            @Html.LabelFor(model => model.StoreAttribute.StartDate)
</td><td>            @Html.EditorFor(model => model.StoreAttribute.StartDate)
            @Html.ValidationMessageFor(model => model.StoreAttribute.StartDate)
</td>
<td>
            @Html.LabelFor(model => model.StoreAttribute.EndDate)&nbsp;
</td><td>            @Html.EditorFor(model => model.StoreAttribute.EndDate)
            @Html.ValidationMessageFor(model => model.StoreAttribute.EndDate)
</td>
</tr>
<tr>
<td></td><td></td><td></td><td>
            <input type="submit" value="Save" />
</td>
<td></td></tr>
</table>

    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "t-button" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
