@model  Footlocker.Logistics.Allocation.Models.RDQRestrictionModel
@{
    ViewBag.Title = "RDQ Restrictions";
}

<h2>RDQ Restrictions</h2>

@if (Model.CanEdit)
{
    <p>
        @Html.ActionLink("Create New", "Create", null, new { @class = "t-button" })
        @Html.ActionLink("Upload", "Upload", null, new { @class = "t-button" })
    </p>
}

<div class="t-tabstrip-wrapper">
    <div id="tabstrip" data-role="tabstrip" tabindex="0" class="t-widget t-header t-tabstrip" role="tablist" aria-activedescendant="tabstrip_ts_active">
        <ul class="t-tabstrip-items t-reset">
            <li class="t-item t-state-default" role="tab" aria-controls="tabstrip-3">
                <span class="t-complete">
                    <a class="t-link" href="/RDQRestriction/Index">
                        All RDQ Restrictions
                    </a>
                </span>
            </li>
            <li class="t-item t-state-default t-first t-tab-on-top" role="tab" aria-controls="tabstrip-1" aria-selected="true">
                <span class="t-complete">
                    <a class="t-link" href="/RDQRestriction/IndexByProduct">
                        By Product
                    </a>
                </span>
            </li>
            <li class="t-item t-state-default t-state-active" role="tab" aria-controls="tabstrip-2">
                <span class="t-complete">
                    <a class="t-link" href="/RDQRestriction/IndexByStore">
                        By Destination
                    </a>
                </span>
            </li>
        </ul>
        <div class="t-content t-state-active" id="tabstrip-1" role="tabpanel" aria-expanded="true" style="display: block; opacity: 1;">
            
            @Html.Raw("<font color=red>" + ViewData["message"] + "</font>")
            @(Html.Telerik().Grid<Footlocker.Logistics.Allocation.Models.StoreLookup>()
                .Name("RDQRestrictionsStoreGrid")
                .Columns(columns =>
                {
                    columns.Bound(sl => sl.Division).Visible(true);
                    columns.Bound(sl => sl.Store).Visible(true);
                    columns.Bound(sl => sl.Mall).Visible(true);
                    columns.Bound(sl => sl.City).Visible(true);
                    columns.Bound(sl => sl.State).Visible(true);
                    columns.Template(@<text>
                                        @Html.Raw("<a class=\"t-button\" href='javascript:MassEditGrid(\"" + item.Division + "\",\"" + item.Store + "\");'>Edit</a>")
                                        @Html.Raw("<a class=\"t-button\" href='javascript:MassDeleteGrid(\"" + item.Division + "\",\"" + item.Store + "\");'>Delete</a>")
                                      </text>)
                           .ClientTemplate("<a class=\"t-button\" href='javascript:MassEditGrid(\"<#= Division #>\",\"<#= Store #>\");'>Edit</a>" +
                                            "<a class=\"t-button\" href='javascript:MassDeleteGrid(\"<#= Division #>\",\"<#= Store #>\");'>Delete</a>");
                })
                .DataBinding(dataBinding =>
                {
                    dataBinding.Ajax().Select("_RDQRestrictionStores", "RDQRestriction");
                })
                .Sortable(s =>
                {
                    s.SortMode(GridSortMode.MultipleColumn);
                })
                .Pageable(p => p.PageSize(10))
                .Filterable()
                .Groupable(grouping => grouping.Enabled(true))
                .Footer(true)
                .DetailView(rrDetails => rrDetails.ClientTemplate(
                    Html.Telerik().Grid<Footlocker.Logistics.Allocation.Models.RDQRestriction>()
                        .Name("RDQRestriction" + "_<#= Store #>")
                        .Columns(columns =>
                        {
                            columns.Bound(rr => rr.Division);
                            columns.Bound(rr => rr.Department);
                            columns.Bound(rr => rr.Category);
                            columns.Bound(rr => rr.Brand);
                            columns.Bound(rr => rr.Vendor);
                            columns.Bound(rr => rr.RDQType);
                            columns.Bound(rr => rr.FromDate).Format("{0:MM/dd/yyyy}");
                            columns.Bound(rr => rr.ToDate).Format("{0:MM/dd/yyyy}");
                            columns.Bound(rr => rr.FromDCCode);
                            columns.Bound(rr => rr.ToDCCode);
                            columns.Bound(rr => rr.ToLeague);
                            columns.Bound(rr => rr.ToRegion);
                            columns.Template(@<text>
                                                    @Html.ActionLink("Edit", "Edit", new { id = item.RDQRestrictionID }, new { @class = "t-button" })
                                                    @Html.ActionLink("Delete", "Delete", new { id = item.RDQRestrictionID }, new { @class = "t-button" })
                                                  </text>)
                                   .Width(250)
                                   .ClientTemplate(
                                        "<a class='t-button' href='" + Url.Content("~/RDQRestriction/Edit/<#= RDQRestrictionID #>") + "'>Edit</a>" +
                                        "<a class='t-button' href='" + Url.Content("~/RDQRestriction/Delete/<#= RDQRestrictionID #>") + "'>Delete</a>"
                                   );
                        })
                        .DataBinding(dataBinding =>
                        {
                            dataBinding.Ajax().Select("_RDQRestrictionsForStore", "RDQRestriction", new { div = "<#= Division #>", store = "<#= Store #>" });
                        })
                        .Pageable()
                        .Sortable()
                        .Filterable()
                        .ToHtmlString()
                        ))
             )

        </div>
        <br />
    </div>
</div>
