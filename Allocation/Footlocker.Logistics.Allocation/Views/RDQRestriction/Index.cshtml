@model  Footlocker.Logistics.Allocation.Models.RDQRestrictionModel
@{
    ViewBag.Title = "RDQ Restrictions";
}

<h2>RDQ Restrictions</h2>

@if(Model.CanEdit)
{
    <p>
        @Html.ActionLink("Create New", "Create", null, new { @class = "t-button" })
        @Html.ActionLink("Upload", "Upload", null, new { @class = "t-button" })
    </p>
}

@Html.Raw("<font color=red" + ViewData["message"] + "</font>")
@(Html.Telerik().Grid<Footlocker.Logistics.Allocation.Models.RDQRestriction>()
    .Name("RDQRestrictionsGrid")
    .Columns(columns =>
    {
        columns.Bound(rr => rr.RDQRestrictionID).Visible(false);
        columns.Bound(rr => rr.Division);
        columns.Bound(rr => rr.Department);
        columns.Bound(rr => rr.Category);
        columns.Bound(rr => rr.Brand);
        columns.Bound(rr => rr.Vendor);
        columns.Bound(rr => rr.RDQType);
        columns.Bound(rr => rr.FromDate);
        columns.Bound(rr => rr.ToDate);
        columns.Bound(rr => rr.FromDCCode);
        columns.Bound(rr => rr.ToLeague);
        columns.Bound(rr => rr.ToRegion);
        columns.Bound(rr => rr.ToStore);
        columns.Bound(rr => rr.ToDCCode);
        columns.Bound(rr => rr.LastModifiedUser);
        columns.Bound(rr => rr.LastModifiedDate);
        columns.Command(commands =>
        {
            commands
             .Custom("Edit")
             .Text("Edit")
             .DataRouteValues(route =>
             {
                 route.Add(o => o.RDQRestrictionID).RouteKey("RDQRestrictionID");
             })
             .Ajax(false)
             .Action("Edit", "RDQRestriction");

            commands
             .Custom("Delete")
             .Text("Delete")
             .DataRouteValues(route =>
             {
                 route.Add(o => o.RDQRestrictionID).RouteKey("RDQRestrictionID");
             })
             .Ajax(false)
             .Action("DeleteRDQRestriction", "RDQRestriction").HtmlAttributes(new { onclick = "return confirm('Are you sure?');" });
        });
    })
    .DataKeys(dataKeys => dataKeys.Add(rr => rr.RDQRestrictionID))
    .DataBinding(dataBinding => dataBinding.Ajax().Select("_Index", "RDQRestriction"))
    .Sortable()
    .Pageable(paging => paging.PageSize(10))
    .Filterable(filtering => filtering.Enabled(true))
    .Groupable(grouping => grouping.Enabled(false))
)
