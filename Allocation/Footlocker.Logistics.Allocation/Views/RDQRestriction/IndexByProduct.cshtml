@model  Footlocker.Logistics.Allocation.Models.RDQRestrictionModel
@{
    ViewBag.Title = "RDQ Restrictions";
}

<script>
    function MassDeleteGrid(division, department, category, brand) {
        if (confirm('Are you sure you want to delete this group of RDQ Restrictions?')) {
            window.location = "/RDQRestriction/DeleteRDQRestrictionsByProduct?div=" + division +
                "&dept=" + department + "&cat=" + category + "&brand=" + brand;
        }
    }
</script>

<h2>RDQ Restrictions</h2>

@if (Model.CanEdit)
{
    <p>
        @Html.ActionLink("Create New", "Create", null, new { @class = "t-button" })
        @Html.ActionLink("Upload", "Upload", null, new { @class = "t-button" })
    </p>
}

<div class="t-tabstrip-wrapper">
    <div id="tabstrip" data-role="tabstrip" tabindex="0" class="t-widget t-header t-tabstrip" role="tablist" aria-activedescendant="tabstrip_ts_active">
        <ul class="t-tabstrip-items t-reset">
            <li class="t-item t-state-default" role="tab" aria-controls="tabstrip-3">
                <span class="t-complete">
                    <a class="t-link" href="/RDQRestriction/Index">
                        All RDQ Restrictions
                    </a>
                </span>
            </li>
            <li class="t-item t-state-default t-first t-tab-on-top t-state-active" role="tab" aria-controls="tabstrip-1" aria-selected="true">
                <span class="t-complete">
                    <a class="t-link" href="/RDQRestriction/IndexByProduct">
                        By Product
                    </a>
                </span>
            </li>
            <li class="t-item t-state-default" role="tab" aria-controls="tabstrip-2">
                <span class="t-complete">
                    <a class="t-link" href="/RDQRestriction/IndexByDestination">
                        By Destination
                    </a>
                </span>
            </li>
        </ul>
        <div class="t-content t-state-active" id="tabstrip-1" role="tabpanel" aria-expanded="true" style="display: block; opacity: 1;">
            @if(ViewData["message"] != null && ViewData["message"] != "")
            {
                <font color="Red">
                    @Html.Raw(Convert.ToString(ViewData["message"]))
                </font>
                <br />
                <br />
            }
            @(Html.Telerik().Grid<Footlocker.Logistics.Allocation.Models.RDQRestriction>()
                .Name("RDQRestrictionsProductGrid")
                .Columns(columns =>
                {
                    columns.Bound(rr => rr.Division);
                    columns.Bound(rr => rr.Department);
                    columns.Bound(rr => rr.Category);
                    columns.Bound(rr => rr.Brand);
                    columns.Template(@<text>
                                        @Html.Raw("<a class=\"t-button\" href='javascript:MassDeleteGrid(\"" + item.Division + "\",\"" + item.Department + "\",\"" + item.Category + "\",\"" + item.Brand + "\");'>Delete</a>")
                                     </text>)
                           .ClientTemplate("<a class=\"t-button\" href='javascript:MassDeleteGrid(\"<#= Division #>\", \"<#= Department #>\",\"<#= Category #>\",\"<#= Brand #>\");'>Delete</a>")
                           .Width(200);
                })
                .DataBinding(dataBinding =>
                {
                    dataBinding.Ajax().Select("_RDQRestrictionProducts", "RDQRestriction");
                })
                .Sortable(s =>
                {
                    s.SortMode(GridSortMode.MultipleColumn);
                })
                .Pageable(p => p.PageSize(10))
                .Filterable()
                .Footer(true)
                .DetailView(rrDetails => rrDetails.ClientTemplate(
                    Html.Telerik().Grid<Footlocker.Logistics.Allocation.Models.RDQRestriction>()
                        .Name("RDQRestriction" + "_<#= Division #>" + "_<#= Department #>" + "_<#= Category #>" + "_<#= Brand #>")
                        .Columns(columns =>
                        {
                            columns.Bound(rr => rr.Vendor);
                            columns.Bound(rr => rr.RDQType);
                            columns.Bound(rr => rr.FromDate).Format("{0:MM/dd/yyyy}");
                            columns.Bound(rr => rr.ToDate).Format("{0:MM/dd/yyyy}");
                            columns.Bound(rr => rr.FromDCCode);
                            columns.Bound(rr => rr.ToDCCode);
                            columns.Bound(rr => rr.ToLeague);
                            columns.Bound(rr => rr.ToRegion);
                            columns.Bound(rr => rr.ToStore);
                            columns.Template(@<text>
                                                    @Html.ActionLink("Edit", "Edit", new { id = item.RDQRestrictionID }, new { @class = "t-button" })
                                                    @Html.ActionLink("Delete", "Delete", new { id = item.RDQRestrictionID }, new { @class = "t-button" })
                                                  </text>)
                                   .Width(250)
                                   .ClientTemplate(
                                        "<a class='t-button' href='" + Url.Content("~/RDQRestriction/Edit/<#= RDQRestrictionID #>") + "'>Edit</a>" +
                                        "<a class='t-button' href='" + Url.Content("~/RDQRestriction/DeleteRDQRestriction/<#= RDQRestrictionID #>") + "'>Delete</a>"
                                   );
                        })
                        .DataBinding(dataBinding =>
                        {
                            dataBinding.Ajax().Select("_RDQRestrictionsForProduct", "RDQRestriction", new { div = "<#= Division #>", dept = "<#= Department #>", cat = "<#= Category #>", brand = "<#= Brand #>" });
                        })
                        .Pageable()
                        .Sortable()
                        .Filterable()
                        .ToHtmlString()
                ))
            )
        </div>
        <br />
    </div>
</div>