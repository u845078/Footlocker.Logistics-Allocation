@model Footlocker.Logistics.Allocation.Models.ConceptType

@{
    ViewBag.Title = (Model.ID > 0) ? "Edit Concept" : "Add Concept";
    Layout = String.Empty;
}

@*NOTE: COMMENT OUT TO TURN OFF CLIENT SIDE VALIDATION*@
@*NOTE: It is imperitive (for Telerik) that the jquery validation scripts are reloaded on this partial view and handled, and default path reset...nice...*@
@*@(Html.Telerik().ScriptRegistrar()
        .DefaultGroup(group => group
            .Add("~/Scripts/jquery.validate.min.js")
            .Add("~/Scripts/jquery.validate.unobtrusive.min.js")
            .DefaultPath("~/Scripts")
            .Combined(false)
            .Compress(false))
        .jQuery(false)
        .jQueryValidation(false))*@


<script type="text/javascript">
    function initDisplay() {
        // Wire up enter key press to submit form
        $(".t-window .dialog-form").keypress(function (e) {
            if ((e.which && e.which == 13) || (e.keyCode && e.keyCode == 13)) {
                $('.t-window .dialog-form button[type=submit]').click();
                return false;
            } else {
                return true;
            }
        });
        
        // Make it so that when a text box gets focus, its text is selected
        $(".t-window .form-fieldset .editor-input[type=text], .t-window .form-fieldset textarea.editor-input")
            .focus(function() { 
                $(this).select();
            })
            .mouseup(function(e) {
                e.preventDefault();
            });
    }

    function buttonCancel_Click(e) {
        e.preventDefault();

        // Close the Add/Edit Concept Window
        $(e.target).closest('.t-window').data('tWindow').close();
    }
    
    function buttonOK_Click(e) {
        e.preventDefault();

        // Retain reference to the  window and grid
        var windowElement = $(e.target).closest('.t-window');
        var window = windowElement.data('tWindow');

        if ($('.dialog-form').valid()) {
            // Re-construct model from form inputs (to be posted to server)
            var serializedModelObject = JSON.stringify(form2js($(".dialog-form .editor-input").toArray(), ".", true));

            // Post the form to the controller via ajax
            //$(".window-content-container").ajax({
            $.ajax({
                type: "POST",
                url: "ConceptType/Save",
                data: serializedModelObject,
                contentType: "application/json; charset=utf-8",
                success: function (data, textState, e) {
                    // Get newly generated concept type id from result
                    var resultObject = data;
                    var conceptTypeId = data.Data;

                    // Update DOM with new id
                    $('#ID').val(conceptTypeId);

                    // Update the title of the window
                    window.title('Manage Concept');

                    // Refresh the underlying concepts grid
                    refreshConceptsGrid(conceptTypeId);
                    
                    // Show divisions
                    refreshDivisionsDisplay();

                    // HACK: Manually hide validation errors (triggered on server, but resolved by AJAX post without server side html rebuild)
                    $('#conceptFormContainer div.validation-summary-errors').removeClass('validation-summary-errors').addClass('validation-summary-valid');
                    $('#conceptFormContainer span.field-validation-error').removeClass('field-validation-error').addClass('field-validation-valid');
                    $('#conceptFormContainer input.input-validation-error').removeClass('input-validation-error');
                },
                error: function (e, textState, errorThrown) {

                    // NOTE: There are still issues with IE and aggresive caching here (exception response from Global.asax Application_Error()...request gets 
                    //           cached without content, so e.responseText is empty string in JS ajax error callback....issue stops if running fiddler and works fine in chome :)
                    var resultObject = (e.responseText != "") ? JSON.parse(e.responseText) : null;

                    // TODO: Use HttpResponse.StatusCode in conjunction with ErrorCode
                    // Determine if this is a validation error
                    if (resultObject && resultObject.ResultCode == @((int)Footlocker.Logistics.Allocation.Common.ActionResultCode.ValidationError)) {
                        // Hit URL for view with validation markup summaries
                        //$(".window-content-container").ajax({
                        $.ajax({
                            type: "POST",
                            url: resultObject.ResultURL,
                            data: serializedModelObject,
                            contentType: "application/json; charset=utf-8",
                            success: function (data, textState, e) {
                                // On success, update the window with this view with validation markup summaries
                                $("#conceptFormContainer").html(data);

                                // Initialize the UI
                                initDisplay();

                                // Give focus to input element
                                giveInputElementFocus();

                                // Center the window
                                window.center();
                            },
                            error: function (e, textState, errorThrown) {
                                var valiationResultObj = (e.responseText != "") ? JSON.parse(e.responseText) : null;

                                // Show universal, unhandled exception error message dialog
                                alert(valiationResultObj ? valiationResultObj.Message : "A system error has occurred.  Please contact your administrator. ");
                            }
                        });
                    }
                    else {
                        // Show universal, unhandled exception error message dialog
                        alert(resultObject ? resultObject.Message : "A system error has occurred.  Please contact your administrator. ");
                    }
                }
            });
        }
        else {
            // Center the window
            window.center();
        }

        return false;
    }

    // On Document Ready...
    $(function() {
        // Initialize the UI
        initDisplay();
    });

</script>

@*Concept Add/Edit Form*@
@using (Html.BeginForm("AddUpdateConcept", "ConceptType", FormMethod.Post, new { @class = "dialog-form", style="padding-bottom: 0px;" }))
{
    // Concept Add/Edit Input Controls
    <div id="conceptFormContainer">
        @Html.Partial("Editor")
    </div>
}