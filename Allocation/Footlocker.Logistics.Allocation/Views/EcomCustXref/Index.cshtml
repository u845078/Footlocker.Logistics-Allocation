@using Footlocker.Logistics.Allocation.Models
@model IEnumerable<EcomCustomerFulfillmentXref>

@{
    ViewBag.Title = "ECOM Customer Fulfillment Cross References";
}

<h2>@ViewBag.Title</h2>

<div id="ContentContainer" class="content-container" style="margin-top: 40px;">
    <p>
        @Html.ActionLink("Create New", "Create", null, new { @class = "t-button", @style = "float: right" })
    </p>

    @Html.Raw("<font color='red'>" + ViewData["message"] + "</font>")
    <br />
    @(Html.Telerik().Grid<EcomCustomerFulfillmentXref>(Model)
        .Name("EcomCustXrefGrid")
        .HtmlAttributes(new { style = "margin-top: 10px;", @class = "selectable-grid" })
        .Columns(columns =>
        {
            columns.Bound(o => o.Country);
            columns.Bound(o => o.State).Width(50);
            columns.Bound(o => o.PostalCode);
            columns.Bound(o => o.FulfillmentCenter.displayValue).Width(175);
            columns.Bound(o => o.EffectiveFromDate);
            columns.Bound(o => o.EffectiveToDate);
            columns.Bound(o => o.LastModifiedUser).Title("Updated By");
            columns.Bound(o => o.LastModifiedDate).Title("Last Updated");
                            columns.Command(commands =>
                            {
                                commands.Custom("Edit").Text("Edit")
                                    .DataRouteValues(route => { route.Add(o => o.FulfillmentCenterID).RouteKey("ID"); })
                                    .Ajax(false)
                                    .Action("Edit", "EcomCustXref");
                                commands.Custom("Delete").Text("Delete")
                                    .DataRouteValues(route => { route.Add(o => o.FulfillmentCenterID).RouteKey("ID"); })
                                    .Ajax(false)
                                    .Action("Delete", "EcomCustXref").HtmlAttributes(new { onclick = "return confirm('Are you sure?');" });
                            }).HtmlAttributes(new { style = "text-align: left" }).Width(300);
        })
        .Sortable(s =>
        {
            s.SortMode(GridSortMode.MultipleColumn);
        })
        .Pageable(p => p.PageSize(50))
        .Filterable()
        .Groupable(grouping => grouping.Enabled(false))
        .Footer(true)
    )
</div>