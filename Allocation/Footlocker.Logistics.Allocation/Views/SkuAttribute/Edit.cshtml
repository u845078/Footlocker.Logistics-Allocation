@model SkuAttributeModel

@{
    ViewBag.Title = "Edit";
    bool hasEditRole = ViewBag.hasEditRole;
}
<script>
    function onLoadSlider() {
        var weightActive = $('#WeightActive').data('tSlider'); // get slider object
        weightActive.value(@Model.WeightActive);
    }

    function enableCheckbox(cb, attr) {

        if (cb.checked) {
            $('#Attributes_' + attr + '__WeightInt').val(0);
            $('#Attributes_' + attr + '__WeightInt').attr("disabled", "disabled");
            return true;
        }
        else
        {
            var isEnabled = true;

            if (attr == 0) {
                isEnabled = false;
                alert("Department attribute is Mandatory!");
            }
            else if (attr == 1 && $('#Category').val() != "") {
                isEnabled = false;
                alert("Category attribute is Mandatory when a Category is selected!");
            }
            else if (attr == 3 && $('#BrandID').val() != "") {
                isEnabled = false;
                alert("BrandID attribute is Mandatory when a BrandID is selected!");
            }

            if (isEnabled == true) {
                $('#Attributes_' + attr + '__WeightInt').removeAttr("disabled");
                return true;
            } else {
                $('#Attributes_' + attr + '__WeightInt').val(0);
                $('#Attributes_' + attr + '__WeightInt').attr("disabled", "disabled");
                return false;
            }
        }
    }

    function updateSum() {
        var sum = 0;
        sum = sum + parseInt($('#Attributes_0__WeightInt').val());
        sum = sum + parseInt($('#Attributes_1__WeightInt').val());
        sum = sum + parseInt($('#Attributes_2__WeightInt').val());
        sum = sum + parseInt($('#Attributes_3__WeightInt').val());
        sum = sum + parseInt($('#Attributes_4__WeightInt').val());
        sum = sum + parseInt($('#Attributes_5__WeightInt').val());
        sum = sum + parseInt($('#Attributes_6__WeightInt').val());
        sum = sum + parseInt($('#Attributes_7__WeightInt').val());
        sum = sum + parseInt($('#Attributes_8__WeightInt').val());
        sum = sum + parseInt($('#Attributes_9__WeightInt').val());
        sum = sum + parseInt($('#Attributes_10__WeightInt').val());
        sum = sum + parseInt($('#Attributes_11__WeightInt').val());
        sum = sum + parseInt($('#Attributes_12__WeightInt').val());
        sum = sum + parseInt($('#Attributes_13__WeightInt').val());
        sum = sum + parseInt($('#Attributes_14__WeightInt').val());
        sum = sum + parseInt($('#Attributes_15__WeightInt').val());
        sum = sum + parseInt($('#Attributes_16__WeightInt').val());
        sum = sum + parseInt($('#Attributes_17__WeightInt').val());
        sum = sum + parseInt($('#Attributes_18__WeightInt').val());

        $('#sum').empty().append('Total Weight:  ' + sum);
    }

    $(document).ready(function () {
        updateSum();

    })
</script>
<h2>
    @{
        var title = "";
        if (hasEditRole)
        {
            title = "Edit";
        }
        else
        {
            title = "View";
        }
    }

    @title Quantum Attribute Matching
</h2>

@Html.ValidationSummary(true)
@using (Html.BeginForm("Edit", "SkuAttribute"))
{
    @Html.HiddenFor(model => model.HeaderID)
    @Html.AntiForgeryToken()

    <fieldset>
        @if (ViewData["message"] != null)
        {
            @Html.Raw("<font color='red'>" + ViewData["message"] + "</font>")
        }

        <div class="editor-field">
            @Html.LabelFor(model => model.Division)
            <br />
            @Html.DropDownListFor(model => model.Division, Model.DivisionList, new { disabled = true })
            @Html.HiddenFor(model => model.Division)
        </div>
        <br />
        <div class="editor-field">
            @Html.LabelFor(model => model.Department)
            <br />
            @Html.DropDownListFor(model => model.Department, Model.DepartmentList, new { disabled = true })
            @Html.HiddenFor(model => model.Department)
        </div>
        <br />
        <div class="editor-field">
            @if (Model.Category == null)
            {
                @Html.Raw("Category: default")
            }
            else
            {
                @Html.LabelFor(model => model.Category)
                <br />
                @Html.DropDownListFor(model => model.Category, Model.CategoryList, new { disabled = true })
            }
            @Html.HiddenFor(model => model.Category)
        </div>
        <br />
        <div class="editor-field">
            @if (Model.BrandID == null)
            {
                @Html.Raw("BrandID: default")
            }
            else
            {
                @Html.LabelFor(model => model.BrandID)
                <br />
                @Html.DropDownListFor(model => model.BrandID, Model.BrandList, new { disabled = true })
            }
            @Html.HiddenFor(model => model.BrandID)
        </div>
        <br />
        <div class="editor-field">
            @if (string.IsNullOrEmpty(Model.SKU))
            {
                @Html.Raw("SKU: default")
            }
            else
            {
                @Html.LabelFor(model => model.SKU)
                <br />
                @Html.TextBoxFor(model => model.SKU, new { disabled = "disabled" })
            }
            @Html.HiddenFor(model => model.SKU)
        </div>
        <br />
        <div class="editor-field">
            @Html.LabelFor(model => model.WeightActive)
            <br />
            @Html.TextBoxFor(model => model.WeightActive, new { @type = "number", min = 1, max = 100, @style = "width: 40px; margin-top: 5px;" })
            <label>1 = Inactive, 100 = Active</label>
        </div>
        <br />
        @if (Model.Message != null)
        {
            @Html.Raw("<font color='red'>" + Model.Message + "</font>")
        }
        <table>
            @for (var count = 0; count < Model.Attributes.Count(); count++)
            {
                <tr>
                    <td>
                        @Html.HiddenFor(model => Model.Attributes[count].HeaderID)
                        @Html.DisplayFor(model => Model.Attributes[count].AttributeType)
                        @Html.HiddenFor(model => Model.Attributes[count].AttributeType)
                    </td>
                    <td>
                        @Html.LabelFor(model => Model.Attributes[count].Mandatory)
                        @Html.CheckBoxFor(model => Model.Attributes[count].Mandatory, new { onclick = "return enableCheckbox(this," + count + ");" })
                    </td>
                    <td>
                        @Html.LabelFor(model => Model.Attributes[count].Weight)
                        @if (Model.Attributes[count].Mandatory)
                        {
                            @Html.TextBoxFor(model => Model.Attributes[count].WeightInt, new { disabled = "disabled", style = "width: 3em;", onblur = "updateSum();" })
                        }
                        else
                        {
                            @Html.TextBoxFor(model => Model.Attributes[count].WeightInt, new { style = "width: 3em;", onblur = "updateSum();" })
                        }
                    </td>
                </tr>
            }
            <tr>
                <td></td>
                <td colspan="2" align="right">
                    <div id="sum">Total Weight:  0</div>
                </td>
            </tr>
        </table>

        @if (hasEditRole)
        {
            <p>
                <input type="submit" value="Save" name="submitButton" />
            </p>

            if (!string.IsNullOrEmpty(Model.SKU))
            {
                <p>
                    <input type="submit" value="Reinitialize" name="submitButton" />
                </p>
            }
        }

    </fieldset>
}
<br />
@Html.ActionLink("Back to List", "Index", null, new { @class = "t-button" })