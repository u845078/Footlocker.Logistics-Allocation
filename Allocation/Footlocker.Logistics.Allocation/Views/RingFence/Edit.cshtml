@model RingFenceModel

@{
    ViewBag.Title = "Edit Ring Fence";
}

<script src="~/Scripts/FootLocker/telerikShims_ChildGrid.js" type="text/javascript"></script>
<style>
    .t-grid-cancel-changes {
        display: none;
    }
</style>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()
    if ((Convert.ToString(ViewData["message"]) != "") && (ViewData["message"] != null))
    {
        <font color="red">@Html.Raw(ViewData["message"])</font>
    }
    <fieldset>
        <legend>Edit Ring Fence</legend>
        <br />
        <table>
            <tr>
                <td><img src="@Url.Content("~/Image/ShowImage/?sku=" + Model.RingFence.Sku)" /></td>
                <td>
                    <b>@Html.LabelFor(model => model.RingFence.Sku)</b>
                    @Html.DisplayFor(model => model.RingFence.Sku)
                    <br />
                    @Html.Raw("<input name=\"RingFence.ID\" type=\"hidden\" value=\"" + Model.RingFence.ID + "\"/>")
                    @Html.Raw("<input name=\"RingFence.ItemID\" type=\"hidden\" value=\"" + Model.RingFence.ItemID + "\"/>")
                    @Html.Raw("<input name=\"RingFence.Qty\" type=\"hidden\" value=\"" + Model.RingFence.Qty + "\"/>")
                    @Html.Raw("<input name=\"RingFence.Division\" type=\"hidden\" value=\"" + Model.RingFence.Division + "\"/>")
                    @Html.Raw("<input name=\"RingFence.Sku\" type=\"hidden\" value=\"" + Model.RingFence.Sku + "\"/>")
                    @Html.Raw("<input name=\"RingFence.Size\" type=\"hidden\" value=\"" + Model.RingFence.Size + "\"/>")
                    @Html.Raw("<input name=\"RingFence.Comments\" type=\"hidden\" value=\"" + Model.RingFence.Comments + "\"/>")
                    @Html.Raw("<input name=\"RingFence.CreatedBy\" type=\"hidden\" value=\"" + Model.RingFence.CreatedBy + "\"/>")
                    @Html.Raw("<input name=\"RingFence.CreateDate\" type=\"hidden\" value=\"" + Model.RingFence.CreateDate + "\"/>")
                    @Html.Raw("<b>Store:  </b><input name=\"RingFence.Store\" type=\"text\" value=\"" + Model.RingFence.Store + "\"/>")
                    <br />
                    <b>From: </b>@Html.DisplayFor(model => model.RingFence.StartDate)@Html.HiddenFor(model => model.RingFence.StartDate)&nbsp;&nbsp;
                    <b>To: </b>@Html.EditorFor(model => model.RingFence.EndDate, null, new { id = "RingFence.EndDate" })
                </td>
                <td>
                    <br /><input type="submit" value="Save" class="t-button" />
                </td>
            </tr>
        </table>
    </fieldset>
}
Details:
<br />

@(Html.Telerik().Grid<RingFenceDetail>()
     .Name("RingFenceDetailGrid")
     .DetailView(dv => dv.ClientTemplate(Html.Telerik().Grid<ItemPackDetail>()
                        .Name("PackDetails_<#= Size #>")
                        .Columns(columns =>
                        {
                            columns.Bound(det => det.ID).Title("ID").Visible(false);
                            columns.Bound(det => det.PackID).Title("PackID").Visible(false);
                            columns.Bound(det => det.Size).Title("Size").Width(50).Visible(true);
                            columns.Bound(det => det.Quantity).Title("Qty").Visible(true);
                        })
                        .DataBinding(dataBinding => dataBinding.Ajax()
                            .Select("Ajax_GetPackDetails", "RingFence", new { ringFenceID = "<#= RingFenceID #>", packName = "<#= Size #>" })
                        )
                        .ClientEvents(events =>
                        {
                            events.OnDataBound("function() { hack_setChildGridColumnWidth(1); }");
                        })
                        .Footer(false)
                        .ToHtmlString()
                    )
        )
        .ClientEvents(events =>
        {
            events.OnDataBound("function() { hack_removeTelerikExpandIconsForChildlessNodes($('.caselot-input'), function($child) { return $child.text().length < 4 }); }");
        })
        .DataKeys(keys =>
        {
            keys.Add(p => p.RingFenceID);
            keys.Add(p => p.Warehouse);
            keys.Add(p => p.PO);
            keys.Add(p => p.Size);
        })
        .Columns(columns =>
        {
            columns.Bound(o => o.RingFenceID).Visible(false);
            columns.Bound(o => o.Size).Title("Size/Caselot").HtmlAttributes(new { @class = "caselot-input" }).Width(120).ReadOnly().FooterTemplate(
                        @<text>
                           <input type="button" name="name" value="Save" class="t-button" onclick='saveQtyChanges()' />
                         </text>);
            columns.Bound(o => o.Warehouse).Width(100).ReadOnly();
            columns.Bound(o => o.PO).Width(130).ReadOnly();
            columns.Bound(o => o.Qty).Width(100).Aggregate(order => order.Sum())
                    .ClientFooterTemplate("<#= Sum #>");
            columns.Bound(o => o.AvailableQty).Width(100).ReadOnly().Title("Total Available").Aggregate(order => order.Sum())
                    .ClientFooterTemplate("<#= Sum #>");
            columns.Bound(o => o.AssignedQty).Width(100).ReadOnly().Visible(false);
            columns.Bound(o => o.Message).Title("").ReadOnly().HtmlAttributes(new { @style = "color:red" });
        })
        .DataBinding(dataBinding =>
            dataBinding.Ajax()
                    .Select("_SelectBatchEditing", "RingFence", new { ringFenceID = ViewData["ringFenceID"], ajax = true })
                    .Update("_SaveBatchEditing", "RingFence")
            )
        .Scrollable(scrolling => scrolling.Enabled(true))
        .Sortable(sorting => sorting.Enabled(true))
        .Pageable(paging => paging.Enabled(false))
        .Filterable(filtering => filtering.Enabled(true))
        .Groupable(grouping => grouping.Enabled(false))
        .Footer(true)
        .Editable(editing => editing.Mode(GridEditMode.InCell))
        )
<br />
<script type="text/javascript">
    function saveQtyChanges() {
        $('#RingFenceDetailGrid').data('tGrid').submitChanges();
    }
</script>
<br />
<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "t-button" })
</div>