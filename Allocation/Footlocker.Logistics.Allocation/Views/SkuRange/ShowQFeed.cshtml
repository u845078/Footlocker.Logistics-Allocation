@model Footlocker.Logistics.Allocation.Models.QFeedModel

@{
    ViewBag.Title = "Quantum Feed";
}

<h2>Quantum Feed for @Html.DisplayFor(m => Model.Sku)</h2>

<p>
    @Html.ActionLink("Download", "ShowQFeedTextFast", new { planid = Model.RangePlan.Id }, new { @class = "t-button" })    
    @Html.ActionLink("Troubleshoot","Troubleshoot","Item",new {sku = Model.Sku}, new {@class="t-button"})
    @Html.ActionLink("Show RDQ Issues", "ShowRDQIssues", new { planid = Model.RangePlan.Id }, new { @class = "t-button" })
</p>

@(Html.Telerik().Grid<Footlocker.Logistics.Allocation.Models.RangeFileItem>()
        .Name("RangeGrid")
        .Columns(columns =>
        {
            columns.Bound(o => o.ProductIdent).Title("Product").Width(150);
            columns.Bound(o => o.LocationTypeCode).Title("Type");
            columns.Bound(o => o.LocationID).Title("Location");
            columns.Bound(o => o.MaxStockQty).Title("Max");
            columns.Bound(o => o.NonsellableQty).Title("Min");
            columns.Bound(o => o.MinEndDate);
            columns.Bound(o => o.OnRangeDt);
            columns.Bound(o => o.FirstReceivableDt).Title("First Receipt");
            columns.Bound(o => o.MarkdownDt);
            columns.Bound(o => o.OffRangeDt);
            columns.Bound(o => o.TodayUnitCost).Title("Cost");
            columns.Bound(o => o.TodayUnitRetail).Title("Retail");
            columns.Bound(o => o.InitWklyDemand).Title("Init Demand");
            columns.Bound(o => o.Attribute10).Title("Launch");
            columns.Bound(o => o.MldInd).Title("MldInd");
            columns.Bound(o => o.Attribute15);
            columns.Bound(o => o.Attribute9);
            columns.Bound(o => o.LearningTransitionCode);
        })
        .DataBinding(dataBinding =>
        {
            dataBinding.Ajax().Select("_ShowQFeed", "SkuRange", new { planID = Model.RangePlan.Id });
        })
        .Scrollable(scrolling => scrolling.Enabled(false))
        .Sortable(sorting => sorting.Enabled(true))
        .Pageable(paging => paging.Enabled(true))
        .Filterable(filtering => filtering.Enabled(true))
        .Groupable(grouping => grouping.Enabled(false))
        .Footer(true)
)

<font color="red">
@foreach (string s in Model.VerificationMessages)
{ 
    @Html.Raw(s + "<BR>");
}
</font>

<p>
    @Html.ActionLink("Back to Details", "PresentationQuantities", new { planid = Model.RangePlan.Id }, new { @class = "t-button" })
</p>
