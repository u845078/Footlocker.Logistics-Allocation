@model Footlocker.Logistics.Allocation.Models.RangePlan

@{
    ViewBag.Title = "CreateRangePlan";
}

<h2>Create SKU</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    if ((ViewData["message"] != "") && (ViewData["message"] != null))
    { 
        <font color="red">@Html.Raw(ViewData["message"])</font>
    }

    <fieldset>
        <legend>SKU</legend>
        <div class="editor-label">
            @Html.LabelFor(model => model.Launch)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Launch)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LaunchDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LaunchDate)
            @Html.ValidationMessageFor(model => model.LaunchDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description, "Comment")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>
@*
        <div class="editor-label">
            @Html.LabelFor(model => model.PlanType, "Plan Type")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.PlanType, new List<SelectListItem> { new SelectListItem{Text="ALR",Value="ALR"},
                                                                                    new SelectListItem{Text="FOP",Value="FOP"}})
        </div>*@

        <div class="editor-label">
            @Html.LabelFor(model => model.Sku, "SKU") (##-##-#####-##)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Sku)
            @Html.ValidationMessageFor(model => model.Sku)
        </div>

        <p>
            <input type="submit" value="Create" class="t-button"/>
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class="t-button"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
