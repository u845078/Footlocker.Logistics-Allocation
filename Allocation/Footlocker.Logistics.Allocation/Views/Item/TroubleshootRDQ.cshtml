@model Footlocker.Logistics.Allocation.Models.TroubleshootRDQModel

@{
    ViewBag.Title = "TroubleshootRDQ";
}

<h2>TroubleshootRDQ</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()

    <fieldset>

        <div class="editor-label">
            @Html.LabelFor(model => model.InstanceID)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.InstanceID, new SelectList(Model.AvailableInstances, "ID", "Name"), new { onchange = "autopostback(this);" })
            @Html.ValidationMessageFor(model => model.InstanceID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ControlDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ControlDate)
            @Html.ValidationMessageFor(model => model.InstanceID)
        </div>

        <p>
            <input type="submit" value="Submit" />
        </p>
    </fieldset>
}

<fieldset>
    <legend>RDQs to MF</legend>

    @(Html.Telerik().Grid<Footlocker.Logistics.Allocation.Models.RDQ>()
            .Name("TroubleshootRDQToMF")
        .Columns(columns =>
        {
            columns.Bound(o => o.Status);
            columns.Bound(o => o.Division);
            columns.Bound(o => o.Store);
            columns.Bound(o => o.Sku);
            columns.Bound(o => o.Size);
            columns.Bound(o => o.Qty).Aggregate(aggreages => aggreages.Sum())
                   .ClientFooterTemplate("Filtered Qty: <#= Sum #>");
            columns.Bound(o => o.DC);
            columns.Bound(o => o.PO);
            columns.Bound(o => o.RecordType);
        })
        .DataBinding(dataBinding =>
        {
            dataBinding.Ajax().Select("_TroubleshootRDQToMF", "item", new { instance = Model.InstanceID, controldate = Model.ControlDate });
        })
        .Sortable(sorting => sorting.Enabled(true))
        .Pageable(paging => paging.Enabled(true))
        .Filterable(filtering => filtering.Enabled(true))
        .Groupable(grouping => grouping.Enabled(false))
            .Footer(true)
)

</fieldset>

<script>
    function autopostback(dropdown) {
        window.location = '/Item/TroubleshootRDQ?instanceID=' + dropdown.value;
    }
</script>
