@model Footlocker.Logistics.Allocation.Models.ReinitializeBaseDemandModel

@{
    ViewBag.Title = "Create";
}

<h2>Create Base Demand Override</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()

    if ((ViewData["message"] != "") && (ViewData["message"] != null))
    {
        <font color="red">@Html.Raw(ViewData["message"])</font>
    }

<fieldset>
    <legend>Base Demand Override Fields</legend>

    <div class="editor-label">
        @Html.LabelFor(model => model.SKU, "SKU") (##-##-#####-##)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.SKU)
        @Html.ValidationMessageFor(model => model.SKU)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.ReinitializeBaseDemand.Size, "Size") (###)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.ReinitializeBaseDemand.Size)
        @Html.ValidationMessageFor(model => model.ReinitializeBaseDemand.Size)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.ReinitializeBaseDemand.Store, "Store") (#####)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.ReinitializeBaseDemand.Store)
        @Html.ValidationMessageFor(model => model.ReinitializeBaseDemand.Store)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.ReinitializeBaseDemand.BaseDemand, "Base Demand") 
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.ReinitializeBaseDemand.BaseDemand)
        @Html.ValidationMessageFor(model => model.ReinitializeBaseDemand.BaseDemand)
    </div>

    <p>
        <input type="submit" value="Create" class="t-button" />
    </p>
</fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "t-button" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
